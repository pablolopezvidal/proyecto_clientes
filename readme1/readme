













/*VER PRODUCTO AÑADIDO--------------------------------------------------------------*//*ultimo que hice y hay que mejorar*/
    
obtenerObjetosLocalStorage().then(arrayResultante => {
    // Iterar sobre el array utilizando forEach
    arrayResultante.forEach(item => {
        console.log(item);       
        console.log(item.id);
        console.log(item.title);

    

        const divElement = document.createElement('div');
        const imagen = document.createElement('img')
        const texto1 = document.createElement('p');
        const texto2 = document.createElement('p');
        const texto3 = document.createElement('p');
        const botonProducto = document.createElement('div');
        const textoBoton = document.createElement('p');
        textoBoton.textContent="VER PRODUCTO";
        let idProducto = null;

        imagen.src = "C:\Users\pc\Desktop\pablo-lopez.jpg";
        texto1.textContent = "hola";
        texto3.textContent = "120"; /*ARREGLAR ESTO QUE ESTA HARCODEADO*/
        idProducto = item.id;


        imagen.style.width = '70%';
        imagen.style.height = '70%';
        divElement.classList.add('tarjeta');
        botonProducto.classList.add('botonProducto');

        divElement.appendChild(imagen);
        divElement.appendChild(texto1);
        divElement.appendChild(texto2);
        divElement.appendChild(texto3);
        divElement.appendChild(botonProducto);
        botonProducto.appendChild(textoBoton);

        botonProducto.addEventListener('click', function() {
            verProducto(idProducto);/*<-----------------------AQUI*/
        });

        cajon.appendChild(divElement);
        cajaPrincipal.appendChild(cajon);


    });

































<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="estilos.css">
    <script src="main.js"></script>
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Bebas+Neue&family=Montserrat:wght@200;300&family=Raleway:wght@300&family=Roboto:wght@100&family=Staatliches&display=swap" rel="stylesheet">
</head>
<body>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Registro de Sesión</title>
    </head>
    <body>
        <h2>Inicio de sesión</h2>
        <form>
            <label for="username">Nombre de usuario:</label>
            <input type="text" id="username" required><br><br>
            
            <label for="password">Contraseña:</label>
            <input type="password" id="password" required><br><br>
            
            <input type="button" value="Iniciar sesión" onclick="login()">
        </form>
        <a href="registro.html">registro aqui</a>
        <div class="cajon">
            
        </div>




        <label for="categorias">Categorías:</label>
        <select id="categorias" onchange="mostrarCategoria()"><!--explicar que hace esta funcion-->
            <option value="all-categories">Todas las categorías</option>
            <option value="electronics">Electronics</option>
            <option value="jewelery">Jewelery</option>
            <option value="mens-clothing">Men's Clothing</option>
            <option value="womens-clothing">Women's Clothing</option>
        </select>

        <!--
        <h1>INICIO DE SESION</h1>
        <div id="login-form">
            <label for="username">Nombre de usuario:</label>
            <input type="text" id="username" />
            <button onclick="iniciarSesion()">Iniciar sesión</button>
            <p href="registro.html">¿Todavia no te has registrado? Haz click aquí para iniciar el regitro</p>
        </div>
        <div id="logged-in">
            <p>Bienvenido, <span id="username-display"></span></p>
        </div>
        -->
    </body>
    </html> 
</body>
</html>




/*

function hacerCardProducto(productoSelecionado) {
    const cajonProducto = document.querySelector(".cajonProducto");

    const divElement = document.createElement('div');
    const imagen = document.createElement('img');
    const texto1 = document.createElement('p');
    const texto2 = document.createElement('p');
    const texto3 = document.createElement('p');
    let idProducto;

    // Asegúrate de tener storedItem declarado antes de usarlo
    const storedItem = JSON.parse(localStorage.getItem(productoSelecionado.id));
*/
    /* Condición para verificar si lo que hay en el localStorage y en la API es lo mismo */
 /*
    if (storedItem && storedItem.title === productoSelecionado.title) {
        imagen.src = storedItem.image;
        texto1.textContent = storedItem.title;
        texto3.textContent = storedItem.price;
        idProducto = storedItem.id;
    } else {
        imagen.src = productoSelecionado.image;*//*cambiar*/
       /* texto1.textContent = productoSelecionado.title;
        texto3.textContent = productoSelecionado.price;
        idProducto = productoSelecionado.id;
    }

    imagen.style.width = '70%';
    imagen.style.height = '70%';
    divElement.classList.add('tarjeta');

    divElement.appendChild(imagen);
    divElement.appendChild(texto1);
    divElement.appendChild(texto2);
    divElement.appendChild(texto3);

    cajonProducto.appendChild(divElement);
}

function verProducto(idProducto) {
    
    fetch(`https://fakestoreapi.com/products/${idProducto}`)
        .then(res => {
            if (!res.ok) {
                throw new Error(`Error en la solicitud: ${res.status}`);
            }
            return res.json();
        })
        .then(json => {
            productoSelecionado = json;
            hacerCardProducto(productoSelecionado);
            window.location.href = 'producto.html';
        })
        .catch(error => console.error(error));
}

*/




























document.addEventListener("DOMContentLoaded", function() {
    const registroForm = document.getElementById("formularioProducto");

    registroForm.addEventListener("submit", function(event) {
        event.preventDefault();

        // Obtener valores del formulario
        const precio = registroForm.elements.precio.value;
        const descripcion = registroForm.elements.descripcion.value;
        const categoria = registroForm.elements.categoria.value;
        const imagen = registroForm.elements.imagen.value;

        // Generar un ID aleatorio mayor que 20
        let nuevoId;
        do {
            nuevoId = Math.floor(Math.random() * 1000) + 1;
        } while (nuevoId <= 20 || idExistente(nuevoId));

        // Crear objeto con la estructura deseada
        const nuevoProducto = {
            id: nuevoId,
            title: registroForm.elements.titulo.value,
            price: precio,
            description: descripcion,
            category: categoria,
            image: imagen,
            rating: {
                rate: 4.7,
                count: 500
            }
        };

        // Obtener los productos existentes en localStorage
        const productosExistente = JSON.parse(localStorage.getItem("productos")) || [];

        // Agregar el nuevo producto al array existente
        productosExistente.push(nuevoProducto);

        // Guardar el array actualizado en localStorage
        localStorage.setItem(nuevoId, JSON.stringify(productosExistente));

        // Limpiar el formulario
        registroForm.reset();

        // Puedes mostrar un mensaje o hacer cualquier otra acción después de guardar el producto
        alert("Producto guardado exitosamente.");

        // Puedes redirigir o hacer cualquier otra acción que desees
    });

    // Función para verificar si un ID ya existe en el localStorage
    function idExistente(id) {
        const productosExistente = JSON.parse(localStorage.getItem(id)) || [];
        return productosExistente.some(producto => producto.id === id);
    }
});


















































function mostrarCategoria() {
    
    var select = document.getElementById("categorias");
    var categoriaSeleccionada = select.value;

    
    var cajon = document.querySelector(".cajon");

    while (cajon.firstChild) {
        cajon.removeChild(cajon.firstChild);
    }

    
    switch (categoriaSeleccionada) {    // <-- Realiza una acción basada en la categoría seleccionada
        case "all-categories":
            fetch('https://fakestoreapi.com/products')
                .then(res => res.json())
                .then(json => hacerCard(json));
            break;
        case "electronics":
            fetch('https://fakestoreapi.com/products/category/electronics')
                .then(res => res.json())
                .then(json => hacerCardCategoria(json,"electronics"));
            break;
        case "jewelery":
            fetch('https://fakestoreapi.com/products/category/jewelery')
                .then(res => res.json())
                .then(json => hacerCardCategoria(json,"jewelry"));
            break;
        case "mens-clothing":
            fetch('https://fakestoreapi.com/products/category/men\'s clothing')
            .then(res => res.json())
                .then(json => hacerCardCategoria(json,"men\'s clothing"));
            break;
        case "womens-clothing":
            fetch('https://fakestoreapi.com/products/category/women\'s clothing')
            .then(res => res.json())
                .then(json => hacerCardCategoria(json,"women\'s clothing"));
            break;
    }
}







































/*
function hacerCardProducto(item) {
    
    const cajonProducto = document.querySelector(".cajonProducto");
    cajonProducto.classList.add('cajon');

    const divElement = document.createElement('div');

    const imagen = document.createElement('img')
    const texto1 = document.createElement('p');
    const texto2 = document.createElement('p');
    const texto3 = document.createElement('p');
    let idProducto;


    /*condicion si lo que hay en elocal storage y en la api es lo mismo que meta el obgeto de la api y si no pues que meta el del local storage */
/*
    if (storedItem.title === item.title) {
        imagen.src = item.image;
        texto1.textContent = item.title;
        texto3.textContent = item.price;
        idProducto = item.id;


    } else{
        imagen.src = storedItem.image;
        texto1.textContent = storedItem.title;
        texto3.textContent = storedItem.price;
        idProducto = storedItem.id;

    }

    imagen.style.width = '70%';
    imagen.style.height = '70%';
    divElement.classList.add('tarjeta');

    divElement.appendChild(imagen);
    divElement.appendChild(texto1);
    divElement.appendChild(texto2);
    divElement.appendChild(texto3);

    cajonProducto.appendChild(divElement);

}

function verProducto(idProducto){
    
    fetch(`https://fakestoreapi.com/products/${idProducto}`)
            .then(res=>res.json())
            .then(json=>hacerCardProducto(json))
            window.location.href = 'producto.html'
}

*/


























/*COMPROBAR QUE EL USUARIO ESTE DENTRO DEL LOCAL STORAGE, 
METODO QUE USARE CUANDO QUIERA INSERTAR UN NUEVO USUARIO 
QUE PRIMERO COMPRUEBE CON ESTE METODO SI YA ESTABA DENTRO*/
/*

function buscarUsuarioPorNombre(nombre) {
    var claveBuscada = nombre; 

    var valorEnLocalStorage = localStorage.getItem(claveBuscada);
    
    if (valorEnLocalStorage !== null) {
      return true
    } else {
      return false
    }
    
}

function registrarse() {
    var formulario = document.getElementById("miFormulario");
  
    formulario.addEventListener("submit", function(event) {
      event.preventDefault();
  
      var nombre = formulario.elements.nombre.value;
      var email = formulario.elements.email.value;
      var username = formulario.elements.username.value;
      var password = formulario.elements.password.value;
      var firstname = formulario.elements.firstname.value;
      var lastname = formulario.elements.lastname.value;
      var city = formulario.elements.city.value;
      var street = formulario.elements.street.value;
      var number = formulario.elements.number.value;
      var zipcode = formulario.elements.zipcode.value;
      var lat = formulario.elements.lat.value;
      var long = formulario.elements.long.value;
      var phone = formulario.elements.phone.value;
 
      if(!buscarUsuarioPorNombre(username)){
          
        var datosUsuario = {
            nombre: nombre,
            email: email,
            username: username,
            password: password,
            firstname: firstname,
            lastname: lastname,
            city: city,
            street: street,
            number: number,
            zipcode: zipcode,
            lat: lat,
            long: long,
            phone: phone,
            carrosdecompra: [] 
        };
    
        var datosUsuarioJSON = JSON.stringify(datosUsuario);
        localStorage.setItem(username, datosUsuarioJSON);
    
        alert("Usuario registrado exitosamente.");
      }else{
        alert("ya hay un un usuario con ese nombre de usuario, desbes cambiarlo.");
      }
    });
}
  
registrarse();/*solo va afuncionar cuando envie el formulario????*/
  
 
/*
function inicioSesion() {
    var formulario = document.getElementById("miFormularioiniciosesion");
  
    formulario.addEventListener("submit", function(event) {
      event.preventDefault();
  
     
      var username = formulario.elements.username.value;
      var password = formulario.elements.password.value;
 
      if(buscarUsuarioPorNombre(username)){
            let usuario = localStorage.getItem(username);
            console.log("hasta aqui se llega")
            console.log(usuario)
            let elemento = JSON.parse(usuario);

            if(elemento.password == password){
                alert("inicio correcto");
            }
      }else{
        alert("este usuario no esta registrado");
      }
    });
}  

inicioSesion();
*/






/*

// Función para iniciar sesión
function iniciarSesion() {
    var username = document.getElementById('username').value;
    if (username) {
        sessionStorage.setItem('usuario', username);
        mostrarSesionIniciada();
        fetch('https://fakestoreapi.com/products')
            .then(res=>res.json())
            .then(json=>hacerCard(json))
     
    } else {
        alert('Ingresa un nombre de usuario válido.');
    }
}

// Función para mostrar la sesión iniciada
function mostrarSesionIniciada() {
    var username = sessionStorage.getItem('usuario');
    if (username) {
        document.getElementById('login-form').style.display = 'none';
        document.getElementById('logged-in').style.display = 'block';
        document.getElementById('username-display').textContent = username;
    }
}

// Función para cerrar la sesión
function cerrarSesion() {
    sessionStorage.removeItem('usuario');
    document.getElementById('login-form').style.display = 'block';
    document.getElementById('logged-in').style.display = 'none';
    document.getElementById('username').value = '';
}

// Verificar si hay una sesión iniciada al cargar la página
document.addEventListener('DOMContentLoaded', function() {
    mostrarSesionIniciada();
});



function hacerCard(item) {
    

    const cajon = document.createElement('div');
    cajon.classList.add('cajon');
    
    item.forEach(item => {


        localStorage.setItem(item.id, JSON.stringify(item)); // Convertir a formato JSON antes de guardar
        console.log(JSON.parse(localStorage.getItem(item.id))); // Convertir de nuevo a objeto al recuperarlo
        const storedItem = JSON.parse(localStorage.getItem(item.id));

        const divElement = document.createElement('div');
    
        const imagen = document.createElement('img')
        const texto1 = document.createElement('p');
        const texto2 = document.createElement('p');
        const texto3 = document.createElement('p');
        const botonProducto = document.createElement('div');
        const textoBoton = document.createElement('p');
        textoBoton.textContent="VER PRODUCTO";
        let idProducto = null;
*/

        /*condicion si lo que hay en elocal storage y en la api es lo mismo que meta el obgeto de la api y si no pues que meta el del local storage */
/*
        if (storedItem.title === item.title) {
            imagen.src = item.image;
            texto1.textContent = item.title;
            texto3.textContent = item.price;
            idProducto = item.id;


        } else{
            imagen.src = storedItem.image;
            texto1.textContent = storedItem.title;
            texto3.textContent = storedItem.price;
            idProducto = storedItem.id;

        }

        imagen.style.width = '70%';
        imagen.style.height = '70%';
        divElement.classList.add('tarjeta');
        botonProducto.classList.add('botonProducto');

        divElement.appendChild(imagen);
        divElement.appendChild(texto1);
        divElement.appendChild(texto2);
        divElement.appendChild(texto3);
        divElement.appendChild(botonProducto);
        botonProducto.appendChild(textoBoton);

        botonProducto.addEventListener('click', function() {
            verProducto(idProducto);
        });
        



        cajon.appendChild(divElement);
    });
    document.body.appendChild(cajon);

}




function mostrarCategoria() {
    var select = document.getElementById("categorias");
    var categoriaSeleccionada = select.value;

    
    var cajon = document.querySelector(".cajon");

    if(cajon.childElementCount > 0){
        cajon.remove();
    }

    // Realiza una acción basada en la categoría seleccionada
    switch (categoriaSeleccionada) {
        case "all-categories":
            fetch('https://fakestoreapi.com/products')
                .then(res => res.json())
                .then(json => hacerCard(json));
            break;
        case "electronics":
            fetch('https://fakestoreapi.com/products/category/electronics')
                .then(res => res.json())
                .then(json => hacerCard(json));
            break;
        case "jewelery":
            fetch('https://fakestoreapi.com/products/category/jewelery')
                .then(res => res.json())
                .then(json => hacerCard(json));
            break;
        case "mens-clothing":
            fetch('https://fakestoreapi.com/products/category/men\'s clothing')
            .then(res => res.json())
                .then(json => hacerCard(json));
            break;
        case "womens-clothing":
            fetch('https://fakestoreapi.com/products/category/women\'s clothing')
            .then(res => res.json())
                .then(json => hacerCard(json));
            break;
    }
}
function verProducto(idProducto){

    window.location.href = 'producto.html'
    fetch('https://fakestoreapi.com/products/${idProducto}')
            .then(res=>res.json())
            .then(json=>hacerCard(json))

}


function verificarUbicacion(producto){
  if (localStorage.getItem(producto.id)) {
    return 1;
  }else
    return 2;
}



/*
function registro(nombreUsuario, contraseña, email) {
    if (typeof(Storage) !== "undefined") {
      var usuario = {
        nombreUsuario: nombreUsuario,
        contraseña: contraseña,
        email: email
      };
  
      var usuarioJSON = JSON.stringify(usuario);
  
      localStorage.setItem("usuario_actual", usuarioJSON);
  
      alert("Registro exitoso");
  
      return true;
    } else {
      alert("Tu navegador no admite almacenamiento local (localStorage). Por favor, utiliza otro navegador.");
      
      return false;
    }
}
*/

/*COMPROBAR QUE EL USUARIO ESTE DENTRO DEL LOCAL STORAGE, 
METODO QUE USARE CUANDO QUIERA INSERTAR UN NUEVO USUARIO 
QUE PRIMERO COMPRUEBE CON ESTE METODO SI YA ESTABA DENTRO*/

/*
function comprobarUsuarioLocalStorage(usuarioId) {

    // Obtiene los datos del Local Storage (supongamos que los usuarios se almacenan como un array)
    const usuariosEnLocalStorage = JSON.parse(localStorage.getItem('usuario')) || [];

    // Comprueba si el usuario con el ID especificado está en el array
    const usuarioEncontrado = usuariosEnLocalStorage.find(usuario => usuario.id === usuarioId);

    if (usuarioEncontrado) {
        return true; // El usuario se encontró en el Local Storage
    } else {
        return false; // El usuario no se encontró en el Local Storage
    }
}
*/
